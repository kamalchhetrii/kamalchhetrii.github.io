{
  "hash": "2c5bec6c9dbf080b9f581e90a2272061",
  "result": {
    "markdown": "---\ntitle: \"Anomaly Detection in Machine Learning\"\nauthor: \"Kamal Chhetri\"\ndate: \"2023-10-18\"\ncategories:\n  - R\n  - Code\n  - Analysis\n---\n\n\n### Introduction\n\n## Introduction\n\nAnomaly detection, also known as outlier detection, is a fascinating aspect of machine learning. It involves identifying data points, events, or observations that deviate significantly from the norm. These anomalies can often provide critical and actionable insights in various domains, such as fraud detection in banking, intrusion detection in network security, and fault detection in critical systems.\n\n## What is Anomaly Detection?\n\nAnomaly detection is the process of identifying unexpected items or events in datasets, which differ from the norm. In other words, it's about finding the 'outliers' in your data. For example, in a manufacturing context, an anomalous event could be a sudden increase in defective products.\n\n## Types of Anomalies\n\nThere are three main types of anomalies:\n\n1.  **Point Anomalies**: A single instance of data is anomalous if it's too far off from the rest. For example, spending \\$100 on food every day during the holiday season is normal, but may be odd otherwise.\n\n2.  **Contextual Anomalies**: The abnormality is context-specific. This type of anomaly is common in time-series data. For example, spending \\$100 on food during the holiday season is normal, but may be odd otherwise.\n\n3.  **Collective Anomalies**: A set of data instances collectively helps in detecting anomalies. For example, someone is trying to copy data form a remote machine to a local host unexpectedly, an anomaly that would be flagged as a potential cyber attack.\n\n## Anomaly Detection Techniques\n\nThere are several techniques used for anomaly detection, each with its strengths and weaknesses. Some of the most popular methods include:\n\n1.  **Statistical Methods**: These methods model the normal data behavior using statistical parameters like mean, median, mode, variance, etc. Any data instance that doesn't fit this model is considered an anomaly.\n\n2.  **Machine Learning-Based Methods**: These include techniques like clustering, classification, and nearest neighbors. These methods can either be supervised (labels are available) or unsupervised (no labels).\n\n3.  **Time Series Analysis**: This is particularly useful for sequential data, where some pattern or trend is expected. Techniques used here include state space models, decomposition methods, etc.\n\n![](https://miro.medium.com/v2/resize:fit:750/1*zfcgxCebn8ejyhNLU4sCsg.png)\n\n[**Load necessary libraries:**]{.underline}\n\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-1_a604e7f1a4e35b878337f45f092111c5'}\n\n```{.r .cell-code}\nlibrary(fpc)\nlibrary(ggplot2)\nlibrary(dbscan)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dbscan'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:fpc':\n\n    dbscan\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:stats':\n\n    as.dendrogram\n```\n:::\n:::\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-2_d662a238f55ddc5bf6fdbb57e6cc8701'}\n\n```{.r .cell-code}\ndata <- read.csv(\"/Users/test/Downloads/creditcard.csv\")\n```\n:::\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-3_cd2b699c090641e5e1deb55254f92abb'}\n\n```{.r .cell-code}\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Time         V1          V2        V3         V4          V5          V6\n1    0 -1.3598071 -0.07278117 2.5363467  1.3781552 -0.33832077  0.46238778\n2    0  1.1918571  0.26615071 0.1664801  0.4481541  0.06001765 -0.08236081\n3    1 -1.3583541 -1.34016307 1.7732093  0.3797796 -0.50319813  1.80049938\n4    1 -0.9662717 -0.18522601 1.7929933 -0.8632913 -0.01030888  1.24720317\n5    2 -1.1582331  0.87773675 1.5487178  0.4030339 -0.40719338  0.09592146\n6    2 -0.4259659  0.96052304 1.1411093 -0.1682521  0.42098688 -0.02972755\n           V7          V8         V9         V10        V11         V12\n1  0.23959855  0.09869790  0.3637870  0.09079417 -0.5515995 -0.61780086\n2 -0.07880298  0.08510165 -0.2554251 -0.16697441  1.6127267  1.06523531\n3  0.79146096  0.24767579 -1.5146543  0.20764287  0.6245015  0.06608369\n4  0.23760894  0.37743587 -1.3870241 -0.05495192 -0.2264873  0.17822823\n5  0.59294075 -0.27053268  0.8177393  0.75307443 -0.8228429  0.53819555\n6  0.47620095  0.26031433 -0.5686714 -0.37140720  1.3412620  0.35989384\n         V13        V14        V15        V16         V17         V18\n1 -0.9913898 -0.3111694  1.4681770 -0.4704005  0.20797124  0.02579058\n2  0.4890950 -0.1437723  0.6355581  0.4639170 -0.11480466 -0.18336127\n3  0.7172927 -0.1659459  2.3458649 -2.8900832  1.10996938 -0.12135931\n4  0.5077569 -0.2879237 -0.6314181 -1.0596472 -0.68409279  1.96577500\n5  1.3458516 -1.1196698  0.1751211 -0.4514492 -0.23703324 -0.03819479\n6 -0.3580907 -0.1371337  0.5176168  0.4017259 -0.05813282  0.06865315\n          V19         V20          V21          V22         V23         V24\n1  0.40399296  0.25141210 -0.018306778  0.277837576 -0.11047391  0.06692807\n2 -0.14578304 -0.06908314 -0.225775248 -0.638671953  0.10128802 -0.33984648\n3 -2.26185710  0.52497973  0.247998153  0.771679402  0.90941226 -0.68928096\n4 -1.23262197 -0.20803778 -0.108300452  0.005273597 -0.19032052 -1.17557533\n5  0.80348692  0.40854236 -0.009430697  0.798278495 -0.13745808  0.14126698\n6 -0.03319379  0.08496767 -0.208253515 -0.559824796 -0.02639767 -0.37142658\n         V25        V26          V27         V28 Amount Class\n1  0.1285394 -0.1891148  0.133558377 -0.02105305 149.62     0\n2  0.1671704  0.1258945 -0.008983099  0.01472417   2.69     0\n3 -0.3276418 -0.1390966 -0.055352794 -0.05975184 378.66     0\n4  0.6473760 -0.2219288  0.062722849  0.06145763 123.50     0\n5 -0.2060096  0.5022922  0.219422230  0.21515315  69.99     0\n6 -0.2327938  0.1059148  0.253844225  0.08108026   3.67     0\n```\n:::\n:::\n\n\n## Data cleaning:\n\nRemove the unnecessary column that is not required during the analysis. We can remove the unnecessary column by following:\n\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-4_9cb75d31a56eab9ab3a14d22b8a2e358'}\n\n```{.r .cell-code}\ndata$Time <- NULL\n```\n:::\n\n\n## Convert categorical variables to factors:\n\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-5_b2d6a5a8e5bc9e1e3d90c8a849fd1f3f'}\n\n```{.r .cell-code}\ndata$Class <- as.factor(data$Class)\n```\n:::\n\n\n## Convert categorical variable to numeric\n\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-6_8ad0cae9bb3ade387bd67a1fefd44b8b'}\n\n```{.r .cell-code}\ndata$Class <- as.numeric(as.character(data$Class))\n```\n:::\n\n\n## Check if the data contains null values:\n\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-7_e5c3a095c9c14ab39d8cce7adee9c307'}\n\n```{.r .cell-code}\nsum(is.na(data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\nThis means this data doesnot contains any null values. We are good to go with this data and don't have to remove any null data if there are any.\n\n## \n\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-8_94c7da861950db223e1a1142084cdc33'}\n\n:::\n\n\n## Data visualization:\n\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-9_0438bc3b371a65150168528dfbeca497'}\n\n```{.r .cell-code}\n# Select a subset of variables to plot\nselected_vars <- data[, c(\"V1\", \"V2\", \"V3\", \"V4\", \"V5\")]\n\n# Create a color palette\ncolors <- terrain.colors(length(selected_vars))\n\n# Create the pairs plot with colors\npairs(selected_vars, col=colors)\n```\n\n::: {.cell-output-display}\n![](anomaly_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n## DBSCAN clustering for anomaly detection:\n\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-10_75269c031ae6778d421a9e029d937bbb'}\n\n```{.r .cell-code}\ndbscan_result <- dbscan(data, eps = 0.3, minPts = 5)\n```\n:::\n\n\n## Visualization of DBSCAN result:\n\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-11_9d74b087b8d513e66ba152dfd5a80a90'}\n\n:::\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-12_8a52ce71204a7559bc63403e9786612b'}\n\n:::\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-13_fea31658c2288b814f19764ce69223e5'}\n\n:::\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-14_c5c8211af0614114ebdadd4a8c91f060'}\n\n:::\n\n::: {.cell hash='anomaly_cache/html/unnamed-chunk-15_60bbdb8e4fff8c58e0ad60cecf983b86'}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}